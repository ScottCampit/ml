function model = classifierEnsemble(X, Y)
%% CLASSIFIERENSEMBLE Classification Ensemble
% *Author*: Scott Campit
% 
% This function runs an ensemble of regressors for exploratory analysis. Currently, 
% there are 6 statistical learning models that are encoded in the script:
%% 
% # K-Nearest Neighbors
% # Logistic regression
% # Naive Bayes
% # Discriminant Analysis
% # SVMs
% # Decision Trees
% # AdaBoost
% # Random forests
%% 
% Note that a current dependency is MATLAB's Parallel Computing Toolbox. If 
% it is not possible to download, comment out the |'UseParallel', true, ...| argument 
% in the script.  
% 
% *INPUTS*
% 
% |X|: A numerical array containing the features as columns and samples as rows.
% 
% |Y|: A numerical array containing the targets as columns and samples as rows.
% 
% *OUTPUT*
% 
% |model|: A structure of several machine learning models from hyperparameter 
% optimization.
    
    try % Convert to GPU array if possible. This may speed up computations downstream.
        X = gpuarray(X);
        Y = gpuarray(Y);
    catch ME
    end
    
    for i = 1:size(Y, 2) % Uses the parallel toolbox for hyperparameter optimization
        model.knn_mdl{i}     = fitcknn(X, Y(:, i), ...
                                  'BreakTies', 'random', ...
                                  'HyperparameterOptimizationOptions', ...
                                         struct('AcquisitionFunctionName', ...
                                                'expected-improvement-plus', ...
                                                'UseParallel', true, ...
                                                'Verbose', 0, ...
                                                'ShowPlots', false));
        t = templateKernel('Learner', 'logistic');
        model.log_mdl{i}   = fitcecoc(X, Y(:, i), ...
                                      'Learner', t, ...
                                      'Coding', 'ternarycomplete', ...
                                       'OptimizeHyperparameters', 'auto', ...
                                        'HyperparameterOptimizationOptions', ...
                                         struct('AcquisitionFunctionName', ...
                                                'expected-improvement-plus', ...
                                                'UseParallel', true, ...
                                                'Verbose', 0, ...
                                                'ShowPlots', false));
        model.nbc_model{i} = fitcnb(X, Y(:, i), ...
                                       'OptimizeHyperparameters', 'auto', ...
                                        'HyperparameterOptimizationOptions', ...
                                         struct('AcquisitionFunctionName', ...
                                                'expected-improvement-plus', ...
                                                'UseParallel', true, ...
                                                'Verbose', 0, ...
                                                'ShowPlots', false));
        model.dac_mdl{i}   = fitcdiscr(X, Y(:, i), ...
                                       'SaveMemory','on', ...
                                       'OptimizeHyperparameters', 'auto', ...
                                       'HyperparameterOptimizationOptions', ...
                                         struct('AcquisitionFunctionName', ...
                                                'expected-improvement-plus', ...
                                                'UseParallel', true, ...
                                                'Verbose', 0, ...
                                                'ShowPlots', false));
        model.svm_mdl{i}    = fitcecoc(X, Y(:, i), ...
                                    'Learners', 'svm', ...
                                    'Coding', 'ternarycomplete', ...
                                    'OptimizeHyperparameters', 'all', ...
                                    'HyperparameterOptimizationOptions', ...
                                         struct('AcquisitionFunctionName', ...
                                                'expected-improvement-plus', ...
                                                'UseParallel', true, ...
                                                'Verbose', 0, ...
                                                'ShowPlots', false));
        model.dtc_mdl{i}    = fitctree(X, Y(:, i), ...
                                    'OptimizeHyperparameters', 'auto', ...
                                    'HyperparameterOptimizationOptions', ...
                                         struct('AcquisitionFunctionName', ...
                                                'expected-improvement-plus', ...
                                                'UseParallel', true, ...
                                                'Verbose', 0, ...
                                                'ShowPlots', false));
        model.ada_mdl{i}    = fitcensemble(X, Y(:, i), ...
                                         'Method', 'AdaBoostM2', ...
                                         'OptimizeHyperparameters', 'auto', ...
                                         'HyperparameterOptimizationOptions', ...
                                         struct('AcquisitionFunctionName', ...
                                                'expected-improvement-plus', ...
                                                'UseParallel', true, ...
                                                'Verbose', 0, ...
                                                'ShowPlots', false));
        model.rfc_mdl{i}    = fitcensemble(X, Y(:, i), ...
                                        'Method', 'Bag', ...
                                        'OptimizeHyperparameters', {'NumLearningCycles', ...
                                                                'MinLeafSize', ...
                                                                'MaxNumSplits'}, ...
                                         'HyperparameterOptimizationOptions', ...
                                         struct('AcquisitionFunctionName', ...
                                                'expected-improvement-plus', ...
                                                'UseParallel', true, ...
                                                'Verbose', 0, ...
                                                'ShowPlots', false));
    end  
end